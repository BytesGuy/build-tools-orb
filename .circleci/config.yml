version: 2.1

orbs:
  build-tools: circleci/build-tools-orb@dev:alpha
  circle-compare-url: iynere/compare-url@0.4.5
  orb-tools: circleci/orb-tools@3.0.0

executors:
  cibuilds:
    resource_class: small
    docker:
      - image: cibuilds/base

  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli

  lint:
    resource_class: small
    docker:
      - image: singapore/lint-condo

jobs:
  lint:
    executor: lint
    steps:
      - checkout
      - run: yamllint .

  # validate goes here: see workflow

  publish-dev:
    executor: cli
    steps:
      - checkout

      - attach_workspace:
          at: workspace

      - run:
          name: publish various dev versions
          command: |
            # dev:alpha, for integration testing
            circleci orb publish workspace/orb.yml circleci/build-tools@dev:alpha --token $CIRCLE_TOKEN

            # branch + sha, for transparency
            circleci orb publish workspace/orb.yml circleci/build-tools@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

            # sha only, for potential prod promotion
            circleci orb publish workspace/orb.yml circleci/build-tools@dev:${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

      - store_artifacts:
          path: workspace/orb.yml

  trigger-integration:
    executor: cibuilds
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "16:68:60:ae:33:5c:4e:b3:be:61:26:ce:9a:f3:ed:84"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - circle-compare-url/reconstruct

      - run:
          name: trigger integration workflow, possible patch / minor / major release
          command: |
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            if [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/commands" -e "src/jobs") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-major-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}

            elif [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/examples" -e "src/executors" -e "src/@orb.yml") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-minor-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}

            elif [[ $(git diff $COMMIT_RANGE --name-status | grep -e "config.yml") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-patch-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}

            else
              INTEGRATION_TAG=<<parameters.tag>>-skip-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            fi

            git tag $INTEGRATION_TAG
            git push origin $INTEGRATION_TAG

workflows:
  lint_pack-validate_publish-dev:
    jobs:
      - lint

      - orb-tools/pack:
          name: pack-validate
          workspace-path: orb.yml
          artifact-path: orb.yml
          requires:
            - lint

      - publish-dev:
          context: orb-publishing
          requires:
            - pack-validate

      - trigger-integration:
          name: trigger-integration-dev
          context: orb-publishing
          requires: [publish-dev]
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          context: orb-publishing
          tag: master
          requires: [publish-dev]
          filters:
            branches:
              only: master

# commands:

# executors:
#   test:
#     docker:
#       - image: circleci/ruby:2.4.1
#     working_directory: ~/.circleci/temp/

# jobs:
#   test-script-run:
#     executor: test
#     steps:
#       - build-tools/script-run:
#           output-file: "./myfile.txt"
#           script: |
#             #!/usr/local/bin/ruby
#             puts "Orb OK"
#       - run:
#           name: Check to be sure the script did what was expected
#           command: |
#             value=$( cat ./myfile.txt )
#             if [ "$value" == "Orb OK" ] ; then
#               echo 'Script worked as expected. OK.'
#               exit 0
#             fi
#             echo 'Script did not work as expected.'
#             exit 1
#   test-extract-inline-orb:
#     parameters:
#       source:
#         type: string
#         default: "./.circleci/config.yml"
#       orb:
#         type: string
#       file:
#         type: string
#     executor: test
#     steps:
#       - checkout
#       - build-tools/extract-inline-orb:
#           source: << parameters.source >>
#           orb: << parameters.orb >>
#           file: << parameters.file >>

#   # extract-and-publish-build-tools:
#   #   executor: test
#   #   steps:
#   #     - checkout
#   #     # - extract-inline-orb:
#   #     #     file: ./.circleci/config.yml
# workflows:
#   btd:
#     jobs:
#       - build-tools/diagnostic:
#           name: diagnostic
#       - test-script-run
#       - test-extract-inline-orb:
#           file: "extract-inline-orb/build-tools.yml"
#           orb: "build-tools"
#       - build-tools/introspect-orbs
#       - orb-tools/publish:
#           checkout: false
#           attach-workspace: true
#           orb-path: "extract-inline-orb/build-tools.yml"
#           orb-ref: "sandbox/build-tools@dev:${CIRCLE_BRANCH}"
#           publish-token-variable: "$CIRCLECI_API_TOKEN"
#           requires:
#             - test-extract-inline-orb

